{"version":3,"file":"js/201.a5aa797a.js","mappings":"wQAWO,SAASA,EAAcC,GAC5B,OAAOC,EAAAA,EAAMC,KAAK,aAAcF,EAAUG,EAAAA,IACrCC,MAAK,EAAEC,MAAOA,WACNA,IAERC,OAAM,EAAEC,UAAWF,MAAOG,cAAaC,qBACtC,KAAM,CACJJ,KAAMG,EACNE,QAASD,EACV,GAET,CAOO,SAASE,EAAYC,GAC1B,OAAOX,EAAAA,EAAMY,IAAI,aAAc,CAC7BC,OAAQF,IAELR,MAAK,EAAEC,MAAOA,WACNA,IAERC,OAAM,EAAEC,UAAWF,MAAOI,qBACzB,KAAM,CACJC,QAASD,EACV,GAET,CAOO,SAASM,EAAcC,GAC5B,OAAOf,EAAAA,EAAMY,IAAK,cAAaG,KAC1BZ,MAAK,EAAEC,MAAOA,WACNA,IAERC,OAAM,EAAEC,UAAWF,MAAOI,qBACzB,KAAM,CACJC,QAASD,EACV,GAET,CAQO,SAASQ,EAAWD,EAAShB,GAClC,OAAOC,EAAAA,EAAMiB,IAAK,cAAaF,IAAWhB,EAAUG,EAAAA,IAC/CC,MAAK,IACGY,IAERV,OAAM,EAAEC,UAAWF,MAAOI,qBACzB,KAAM,CACJC,QAASD,EACV,GAET,CAOO,SAASU,EAAWH,GACzB,OAAOf,EAAAA,EAAMmB,OAAQ,cAAaJ,KAC7BZ,MAAK,SAELE,OAAM,EAAEC,UAAWF,MAAOI,qBACzB,KAAM,CACJC,QAASD,EACV,GAET,C,wFClFSY,MAAM,iB,SAGQA,MAAM,uB,GAGpBA,MAAM,mBAAmBC,GAAG,oB,uBAKZD,MAAM,2B,SAGSA,MAAM,0B,SAGXA,MAAM,wB,GAUhCA,MAAM,mB,GAGNA,MAAM,sB,GAGNA,MAAM,mB,kFAxCbE,EAAAA,EAAAA,IAyCMC,EAAAA,GAAA,MAAAC,EAAAA,EAAAA,IAxCcC,EAAAC,WAATC,K,WADXL,EAAAA,EAAAA,IAyCM,OAvCDM,IAAKD,EAAMZ,QACXK,OAAKS,EAAAA,EAAAA,IAAA,+BAAiCJ,EAAAK,SACjC,0B,EAGRC,EAAAA,EAAAA,GAAoD,MAApDC,GAAoDC,EAAAA,EAAAA,IAAtBN,EAAMZ,SAAO,GAG/BU,EAAAS,OAAwD,iBAAnD,WAAjBZ,EAAAA,EAAAA,IAA6E,MAA7Ea,GAA6EF,EAAAA,EAAAA,IAA3BN,EAAMS,cAAY,KAGpEL,EAAAA,EAAAA,GAkBM,MAlBNM,EAkBM,EAhBJN,EAAAA,EAAAA,GAAuG,OAAjGO,QAAKC,IAAEC,EAAAC,MAAM,gBAAiBd,EAAM,EAAGP,MAAM,0B,QAA2BO,EAAMe,YAAU,EAAAC,GAGlFlB,EAAAS,QAAK,WAAjBZ,EAAAA,EAAAA,IAAuG,OAAvGsB,GAAuGX,EAAAA,EAAAA,IAAjDN,EAAMkB,aAAe,SAAW,SAAd,oBAGzC,IAAnBlB,EAAMmB,WAAQ,WAA1BxB,EAAAA,EAAAA,IAA8F,OAA9FyB,EAAiE,KAACd,EAAAA,EAAAA,IAAGN,EAAMmB,UAAW,IAAC,oBAG3EnB,EAAMqB,YAAS,WAA3B1B,EAAAA,EAAAA,IAAoE,OAApE2B,EAA0D,SAAG,eAGnBtB,EAAMuB,aAAU,WAA1DC,EAAAA,EAAAA,IAA4FC,EAAA,C,MAAzEC,KAAK,YAAoCjC,MAAM,4B,eAG7BO,EAAM2B,YAAS,WAApDH,EAAAA,EAAAA,IAAuFC,EAAA,C,MAApEC,KAAK,OAA8BjC,MAAM,8B,kBAI9DW,EAAAA,EAAAA,GAAsD,MAAtDwB,GAAsDtB,EAAAA,EAAAA,IAAtBN,EAAM6B,SAAO,IAG7CzB,EAAAA,EAAAA,GAAwE,MAAxE0B,GAAwExB,EAAAA,EAAAA,IAArCyB,EAAAC,WAAWhC,EAAMiC,aAAU,IAG9D7B,EAAAA,EAAAA,GAAwD,MAAxD8B,GAAwD5B,EAAAA,EAAAA,IAAvBN,EAAMmC,UAAQ,U,6BAYnD,GACEC,KAAM,YACNC,WAAY,CAACC,gBAAeA,EAAAA,IAC5BC,MAAO,CACLxC,UAAW,CACTyC,KAAMC,MACNC,aAASC,EACTC,UAAU,EACVC,YAAa,WAEf7D,UAAW,CACTwD,KAAMM,OACNJ,aAASC,EACTC,UAAU,EACVC,YAAa,SAEf1C,QAAS,CACPqC,KAAMO,QACNL,SAAS,EACTE,UAAU,EACVC,YAAa,eAEftC,MAAO,CACLiC,KAAMO,QACNL,SAAS,EACTE,UAAU,EACVC,YAAa,WAGjBG,QAAS,CACPhB,WAAUA,EAAAA,I,QC9Ed,MAAMiB,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,O,oICPOzD,MAAM,+B,UACTW,EAAAA,EAAAA,GAA0C,OAArCX,MAAM,wBAAuB,MAAE,K,SAEjBA,MAAM,8B,UACzBW,EAAAA,EAAAA,GAA6C,OAAxCX,MAAM,2BAA0B,MAAE,K,UACvCW,EAAAA,EAAAA,GAA4C,OAAvCX,MAAM,0BAAyB,MAAE,K,UACtCW,EAAAA,EAAAA,GAAiD,OAA5CX,MAAM,6BAA4B,QAAI,K,UAC3CW,EAAAA,EAAAA,GAA6C,OAAxCX,MAAM,0BAAyB,OAAG,K,0CAPzCE,EAAAA,EAAAA,IAQM,MARNU,EAQM,CAPJG,EAEYV,EAAAS,OAA4C,iBAAvC,WAAjBZ,EAAAA,EAAAA,IAA8D,MAA9De,EAAsD,OACtDM,EACAC,EACAG,EACAE,G,CASJ,OACEc,KAAM,kBACNG,MAAO,CACLhC,MAAO,CACLiC,KAAMO,QACNL,SAAS,EACTE,UAAU,EACVC,YAAa,c,QClBnB,MAAMI,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,O,6SCgIAC,EAAe,CACbf,KAAM,Y,gCAvER,MAAMgB,GAASC,EAAAA,EAAAA,MACTC,GAAQC,EAAAA,EAAAA,MAGRC,IAFQC,EAAAA,EAAAA,OAEOC,EAAAA,EAAAA,IAAI,KACnBC,GAAWD,EAAAA,EAAAA,IAAI,IACfE,GAAWF,EAAAA,EAAAA,IAAI,GACf1E,GAAY0E,EAAAA,EAAAA,IAAI,CAAC,GAQvBG,eAAeC,IACb9E,EAAU+E,OAAQC,EAAAA,EAAAA,GAAgBV,EAAMW,OAExC,IACE,MAAOC,EAAoBC,SAAwBC,QAAQC,IAAI,EAC7DC,EAAAA,EAAAA,GAAgBC,EAAAA,KAChBxF,EAAAA,EAAAA,IAAYC,EAAU+E,SAGxBP,EAAaO,MAAQG,EACrBP,EAASI,MAAQI,EAAeR,SAChCC,EAASG,MAAkC,IAA1BJ,EAASI,MAAMS,OAAe,EAAIL,EAAeP,QACpE,CAAE,OAAO,QAAC9E,IACR2F,QAAQC,MAAM5F,EAChB,CACF,CAMA,SAAS6F,EAAkBC,GACzBxB,EAAOyB,KAAK,CACVC,KAAM,SACNb,MAAOW,GAEX,CAMA,SAASG,EAAaC,GACpBhG,EAAU+E,MAAMiB,KAAOA,EAEvB5B,EAAOyB,KAAK,CACVC,KAAO,SACPb,MAAOjF,EAAU+E,OAErB,CAMA,SAASkB,EAAejF,GACtBoD,EAAOyB,KAAK,CACVC,KAAO,UAAS9E,EAAMZ,UACtB6E,MAAOjF,EAAU+E,OAErB,C,OAxDAD,KACAoB,EAAAA,EAAAA,IAAM5B,EAAOQ,G,woBCvEb,MAAMb,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://frontend/./src/api/board/freeService.js","webpack://frontend/./src/components/board/BoardList.vue","webpack://frontend/./src/components/board/BoardList.vue?3a4c","webpack://frontend/./src/components/board/BoardListHeader.vue","webpack://frontend/./src/components/board/BoardListHeader.vue?4af4","webpack://frontend/./src/views/board/free/FreeList.vue","webpack://frontend/./src/views/board/free/FreeList.vue?fe03"],"sourcesContent":["import axios from \"@/api/config/axios\";\r\nimport {MULTIPART_CONFIG} from \"@/constants\";\r\n\r\n/**\r\n * 자유게시글을 등록합니다.\r\n * @param formData 등록 폼\r\n * @returns {Promise<number>}\r\n * 등록된 게시글 번호를 반환하거나,\r\n * data: 에러필드에 에러메시지가 담겨진 객체를 반환합니다.\r\n * message: API 통신 에러메시지\r\n */\r\nexport function registerFree (formData) {\r\n  return axios.post('/api/frees', formData, MULTIPART_CONFIG)\r\n      .then(({data: {data}}) => {\r\n        return data;\r\n      })\r\n      .catch(({response: {data: {errorFields, errorMessage}}}) => {\r\n        throw {\r\n          data: errorFields,\r\n          message: errorMessage\r\n        }\r\n      });\r\n}\r\n\r\n/**\r\n * 자유게시글 목록을 조회합니다.\r\n * @param condition 검색조건\r\n * @returns {Promise<Array>} 자유게시글 목록을 배열로 반환합니다.\r\n */\r\nexport function getFreeList(condition) {\r\n  return axios.get('/api/frees', {\r\n    params: condition\r\n  })\r\n      .then(({data: {data}}) => {\r\n        return data;\r\n      })\r\n      .catch(({response: {data: {errorMessage}}}) => {\r\n        throw {\r\n          message: errorMessage\r\n        }\r\n      });\r\n}\r\n\r\n/**\r\n * 자유게시글 상세정보를 조회합니다.\r\n * @param boardId 자유게시글 번호\r\n * @returns {Promise<Object>} 자유게시글 상세정보\r\n */\r\nexport function getFreeDetail(boardId) {\r\n  return axios.get(`/api/frees/${boardId}`)\r\n      .then(({data: {data}}) => {\r\n        return data;\r\n      })\r\n      .catch(({response: {data: {errorMessage}}}) => {\r\n        throw {\r\n          message: errorMessage\r\n        }\r\n      });\r\n}\r\n\r\n/**\r\n * 자유게시글을 업데이트합니다.\r\n * @param boardId 자유게시글 번호\r\n * @param formData 업데이트 폼\r\n * @return {Promise<number>} 자유게시글 번호\r\n */\r\nexport function updateFree(boardId, formData) {\r\n  return axios.put(`/api/frees/${boardId}`, formData, MULTIPART_CONFIG)\r\n      .then(() => {\r\n        return boardId;\r\n      })\r\n      .catch(({response: {data: {errorMessage}}}) => {\r\n        throw {\r\n          message: errorMessage\r\n        }\r\n      });\r\n}\r\n\r\n/**\r\n * 자유게시글을 삭제합니다.\r\n * @param boardId 자유게시글 번호\r\n * @return {Promise<void>}\r\n */\r\nexport function deleteFree(boardId) {\r\n  return axios.delete(`/api/frees/${boardId}`)\r\n      .then(() => {\r\n      })\r\n      .catch(({response: {data: {errorMessage}}}) => {\r\n        throw {\r\n          message: errorMessage\r\n        };\r\n      });\r\n}","<template>\r\n\r\n  <!-- 공지사항중 알림글인 경우 클래스를 추가합니다. (색상부여) -->\r\n  <div\r\n      v-for=\"board in boardList\"\r\n      :key=\"board.boardId\"\r\n      :class=\"{'board-list-alarm-container': isAlarm }\"\r\n      class=\"board-list-container\">\r\n\r\n    <!-- 게시글 번호 -->\r\n    <div class=\"board-list-id\">{{ board.boardId }}</div>\r\n\r\n    <!-- 게시글 카테고리 이름, 문의게시글은 카테고리가 표시되지 않습니다. -->\r\n    <div v-if=\"!isQna\" class=\"board-list-category\">{{ board.categoryName }}</div>\r\n\r\n    <!-- 게시글 제목 컨테이너 -->\r\n    <div class=\"board-list-title\" id=\"board-list-title\">\r\n\r\n      <div @click=\"$emit('detail-router', board);\" class=\"board-list-title-link\">{{ board.boardTitle }}</div>\r\n\r\n      <!-- 답변상태가 제목에 첨삭됩니다. (문의게시글) -->\r\n      <span v-if=\"isQna\" class=\"board-list-title-answer\">{{ board.answerStatus ? '(답변완료)' : '(미답변)' }}</span>\r\n\r\n      <!-- 댓글이 존재하면 개수가 표시됩니다. (자유게시글) -->\r\n      <span v-if=\"board.replyCnt !== 0\" class=\"board-list-title-reply\">({{ board.replyCnt }})</span>\r\n\r\n      <!-- 해당 글이 최신상태인지 표시됩니다. -->\r\n      <span v-if=\"board.newStatus\" class=\"board-list-title-new\">new</span>\r\n\r\n      <!-- 첨부파일여부를 표시합니다. (자유게시글) -->\r\n      <font-awesome-icon icon=\"paperclip\" v-if=\"board.fileStatus\" class=\"board-list-title-file\" />\r\n\r\n      <!-- 비밀글 상태를 표시합니다. (문의게시글) -->\r\n      <font-awesome-icon icon=\"lock\" v-if=\"board.qnaSecret\" class=\"board-list-title-secret\"/>\r\n    </div>\r\n\r\n    <!-- 조회수 -->\r\n    <div class=\"board-list-view\">{{ board.viewCnt }}</div>\r\n\r\n    <!-- 생성일시 -->\r\n    <div class=\"board-list-regdate\">{{ formatDate(board.createDate) }}</div>\r\n\r\n    <!-- 작성자 이름 -->\r\n    <div class=\"board-list-name\"> {{ board.userName }}</div>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\n/**\r\n * 게시글목록을 표시하는 컴포넌트\r\n */\r\nimport {formatDate} from \"@/util/formatUtil\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/vue-fontawesome\";\r\n\r\nexport default {\r\n  name: \"BoardList\",\r\n  components: {FontAwesomeIcon},\r\n  props: {\r\n    boardList: {\r\n      type: Array,\r\n      default: undefined,\r\n      required: true,\r\n      description: '게시글 리스트'\r\n    },\r\n    condition: {\r\n      type: Object,\r\n      default: undefined,\r\n      required: true,\r\n      description: '검색 조건'\r\n    },\r\n    isAlarm: {\r\n      type: Boolean,\r\n      default: false,\r\n      required: false,\r\n      description: '공지사항 알림글 여부'\r\n    },\r\n    isQna: {\r\n      type: Boolean,\r\n      default: false,\r\n      required: false,\r\n      description: '문의글 타입'\r\n    }\r\n  },\r\n  methods: {\r\n    formatDate,\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.board-list-container {\r\n  border-bottom: 1px solid var(--border-color-gray);\r\n  height: 30px;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.board-list-alarm-container {\r\n  background-color: var(--sub-color-blue);\r\n}\r\n\r\n.board-list-container > div {\r\n  font-size: var(--middle-font-size);\r\n  flex-grow: 1;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.board-list-id, .board-list-category, .board-list-view{\r\n  flex-basis: 2%;\r\n}\r\n\r\n#board-list-title {\r\n  flex-basis: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n}\r\n\r\n.board-list-title-link {\r\n  cursor: pointer;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  max-width: 450px;\r\n  margin-right: 5px;\r\n}\r\n\r\n.board-list-title-answer {\r\n  margin: 0 10px;\r\n  font-size: var(--small-font-size);\r\n}\r\n\r\n.board-list-title-reply {\r\n  margin-right: 5px;\r\n}\r\n\r\n.board-list-title-new {\r\n  font-size: 11px;\r\n  color: orange;\r\n}\r\n\r\n.board-list-title-file {\r\n  margin-left: 5px;\r\n  display: block;\r\n  padding-top: 3px;\r\n}\r\n\r\n.board-list-title-secret {\r\n  color: gray;\r\n  margin-left: 10px;\r\n}\r\n\r\n.board-list-regdate {\r\n  flex-basis: 15%;\r\n}\r\n\r\n.board-list-name {\r\n  flex-basis: 10%;\r\n}\r\n\r\n</style>","import { render } from \"./BoardList.vue?vue&type=template&id=17f9dbea&scoped=true\"\nimport script from \"./BoardList.vue?vue&type=script&lang=js\"\nexport * from \"./BoardList.vue?vue&type=script&lang=js\"\n\nimport \"./BoardList.vue?vue&type=style&index=0&id=17f9dbea&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-17f9dbea\"]])\n\nexport default __exports__","<template>\r\n\r\n  <div class=\"board-list-header-container\">\r\n    <div class=\"board-list-header-id\">번호</div>\r\n    <!-- 문의게시글의 경우 카테고리가 존재하지 않습니다. -->\r\n    <div v-if=\"!isQna\" class=\"board-list-header-category\">분류</div>\r\n    <div class=\"board-list-header-title\">제목</div>\r\n    <div class=\"board-list-header-view\">조회</div>\r\n    <div class=\"board-list-header-regdate\">등록일시</div>\r\n    <div class=\"board-list-header-name\">등록자</div>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\n/**\r\n * 게시글목록의 헤더 컴포넌트\r\n */\r\nexport default {\r\n  name: \"BoardListHeader\",\r\n  props: {\r\n    isQna: {\r\n      type: Boolean,\r\n      default: false,\r\n      required: false,\r\n      description: '문의글 타입여부'\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.board-list-header-container {\r\n  border-top: 1px solid var(--border-color-gray);\r\n  border-bottom: 2px solid var(--border-color-gray);\r\n  height: 30px;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.board-list-header-container > div {\r\n  font-size: var(--middle-font-size);\r\n  flex-grow: 1;\r\n  font-weight: bold;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.board-list-header-id, .board-list-header-category, .board-list-header-view{\r\n  flex-basis: 2%;\r\n}\r\n\r\n.board-list-header-title {\r\n  flex-basis: 50%;\r\n}\r\n\r\n.board-list-header-regdate {\r\n  flex-basis: 15%;\r\n}\r\n\r\n.board-list-header-name {\r\n  flex-basis: 10%;\r\n}\r\n</style>","import { render } from \"./BoardListHeader.vue?vue&type=template&id=e88db3b8&scoped=true\"\nimport script from \"./BoardListHeader.vue?vue&type=script&lang=js\"\nexport * from \"./BoardListHeader.vue?vue&type=script&lang=js\"\n\nimport \"./BoardListHeader.vue?vue&type=style&index=0&id=e88db3b8&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-e88db3b8\"]])\n\nexport default __exports__","<template>\r\n\r\n  <GNB></GNB>\r\n\r\n  <!-- 게시글 제목 -->\r\n  <board-title title=\"자유게시판\" ></board-title>\r\n\r\n  <!-- 게시글 검색조건 -->\r\n  <board-search-condition\r\n      @condition-search=\"onConditionSearch\"\r\n      :category-list=\"categoryList\"\r\n      :condition=\"condition\">\r\n  </board-search-condition>\r\n\r\n  <!-- 글 등록 버튼 -->\r\n  <div class=\"register-btn-container\">\r\n    <base-button\r\n        @click=\"router.push({path: '/frees/register',query: condition})\"\r\n        name=\"글 등록\">\r\n    </base-button>\r\n  </div>\r\n\r\n  <!-- 자유게시글 목록 -->\r\n  <div class=\"free-list-container\">\r\n\r\n    <!-- 자유게시글 헤더 -->\r\n    <board-list-header></board-list-header>\r\n\r\n    <!-- 자유게시글 -->\r\n    <board-list\r\n        @detail-router=\"onDetailRouter\"\r\n        :board-list=\"freeList\"\r\n        :condition=\"condition\">\r\n    </board-list>\r\n\r\n    <!-- 페이징 처리 -->\r\n    <pagination\r\n        @page-router=\"onPageRouter\"\r\n        :total-cnt=\"totalCnt\"\r\n        :limit=\"Number(condition.limit)\"\r\n        :page=\"Number(condition.page)\"\r\n        class=\"paging-container\">\r\n    </pagination>\r\n\r\n  </div>\r\n\r\n</template>\r\n<script setup>\r\n/**\r\n * 자유게시글 목록 컴포넌트\r\n */\r\n\r\nimport BoardTitle from \"@/components/board/BoardTitle.vue\";\r\nimport BoardSearchCondition from \"@/components/board/BoardSearchCondition.vue\";\r\nimport BoardListHeader from \"@/components/board/BoardListHeader.vue\";\r\nimport Pagination from \"@/components/Pagination.vue\";\r\nimport BoardList from \"@/components/board/BoardList.vue\";\r\nimport BaseButton from \"@/components/base/BaseButton.vue\";\r\nimport GNB from \"@/components/GNB.vue\";\r\nimport {FREE_CATEGORY_ID} from \"@/constants\";\r\nimport {useRoute, useRouter} from \"vue-router\";\r\nimport {useStore} from \"vuex\";\r\nimport {ref, watch} from \"vue\";\r\nimport {createCondition} from \"@/util/queryParamUtil\";\r\nimport {getCategoryList} from \"@/api/categoryService\";\r\nimport {getFreeList} from \"@/api/board/freeService\";\r\n\r\nconst router = useRouter();\r\nconst route = useRoute();\r\nconst store = useStore();\r\n\r\nconst categoryList = ref([]); /* 카테고리 목록 */\r\nconst freeList = ref([]); /* 자유게시글 목록 */\r\nconst totalCnt = ref(0); /* 게시글 총 개수 */\r\nconst condition = ref({}); /* 게시글 검색조건 */\r\n\r\ninitFreeList(); /* 컴포넌트 초기화 */\r\nwatch(route, initFreeList); /* 컴포넌트 URL 변경을 감지합니다.(페이징 처리) */\r\n\r\n/**\r\n * 자유게시글 목록 컴포넌트를 초기화 합니다.\r\n */\r\nasync function initFreeList() {\r\n  condition.value = createCondition(route.query);\r\n\r\n  try {\r\n    const [categoryListResult, freeListResult] = await Promise.all([\r\n      getCategoryList(FREE_CATEGORY_ID),\r\n      getFreeList(condition.value),\r\n    ]);\r\n\r\n    categoryList.value = categoryListResult;\r\n    freeList.value = freeListResult.freeList;\r\n    totalCnt.value = freeList.value.length === 0 ? 0 : freeListResult.totalCnt;\r\n  } catch ({message}) {\r\n    console.error(message);\r\n  }\r\n}\r\n\r\n/**\r\n * 게시글 검색조건 컴포넌트 핸들러\r\n * @param searchForm 게시글 검색정보\r\n */\r\nfunction onConditionSearch(searchForm) {\r\n  router.push({\r\n    path: '/frees',\r\n    query: searchForm\r\n  })\r\n}\r\n\r\n/**\r\n * 페이징처리 컴포넌트 핸들러\r\n * @param page 해당 페이지\r\n */\r\nfunction onPageRouter(page) {\r\n  condition.value.page = page;\r\n\r\n  router.push({\r\n    path: `/frees`,\r\n    query: condition.value\r\n  });\r\n}\r\n\r\n/**\r\n * 자유게시글 상세페이지로 라우팅합니다.\r\n * @param board 자유게시글 번호\r\n */\r\nfunction onDetailRouter(board) {\r\n  router.push({\r\n    path: `/frees/${board.boardId}`,\r\n    query: condition.value\r\n  });\r\n}\r\n\r\n</script>\r\n\r\n<script>\r\nexport default {\r\n  name: \"FreeList\"\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.free-list-container {\r\n  margin-top: 10px;\r\n}\r\n\r\n.register-btn-container {\r\n  margin-top: 30px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.paging-container {\r\n  margin-top: 30px;\r\n}\r\n\r\n</style>","import script from \"./FreeList.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./FreeList.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./FreeList.vue?vue&type=style&index=0&id=09344340&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-09344340\"]])\n\nexport default __exports__"],"names":["registerFree","formData","axios","post","MULTIPART_CONFIG","then","data","catch","response","errorFields","errorMessage","message","getFreeList","condition","get","params","getFreeDetail","boardId","updateFree","put","deleteFree","delete","class","id","_createElementBlock","_Fragment","_renderList","$props","boardList","board","key","_normalizeClass","isAlarm","_createElementVNode","_hoisted_1","_toDisplayString","isQna","_hoisted_2","categoryName","_hoisted_3","onClick","$event","_ctx","$emit","boardTitle","_hoisted_4","_hoisted_5","answerStatus","replyCnt","_hoisted_6","newStatus","_hoisted_7","fileStatus","_createBlock","_component_font_awesome_icon","icon","qnaSecret","_hoisted_8","viewCnt","_hoisted_9","$options","formatDate","createDate","_hoisted_10","userName","name","components","FontAwesomeIcon","props","type","Array","default","undefined","required","description","Object","Boolean","methods","__exports__","render","__default__","router","useRouter","route","useRoute","categoryList","useStore","ref","freeList","totalCnt","async","initFreeList","value","createCondition","query","categoryListResult","freeListResult","Promise","all","getCategoryList","FREE_CATEGORY_ID","length","console","error","onConditionSearch","searchForm","push","path","onPageRouter","page","onDetailRouter","watch"],"sourceRoot":""}