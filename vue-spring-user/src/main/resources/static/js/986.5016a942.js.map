{"version":3,"file":"js/986.5016a942.js","mappings":"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","sources":["webpack://frontend/./src/api/board/qnaService.js","webpack://frontend/./src/util/boardUtil.js","webpack://frontend/./src/util/boardValidUtil.js","webpack://frontend/./src/util/queryParamUtil.js","webpack://frontend/./src/components/base/BaseTextarea.vue","webpack://frontend/./src/components/base/BaseTextarea.vue?f7d0","webpack://frontend/./src/components/board/BoardFormBtnContainer.vue","webpack://frontend/./src/components/board/BoardFormBtnContainer.vue?5ab5","webpack://frontend/./src/components/board/BoardFormTitle.vue","webpack://frontend/./src/components/board/BoardFormTitle.vue?4b22","webpack://frontend/./src/components/board/BoardTitle.vue","webpack://frontend/./src/components/board/BoardTitle.vue?0d6e","webpack://frontend/./src/views/board/qna/QnaUpdate.vue","webpack://frontend/./src/views/board/qna/QnaUpdate.vue?73b6"],"sourcesContent":["import axios from \"@/api/config/axios\";\r\n\r\n/**\r\n * 문의게시글을 등록합니다.\r\n * @param formData 게시글 등록 폼\r\n * @returns {Promise<number>}\r\n * 등록된 게시글 번호를 반환하거나,\r\n * data: 에러필드에 에러메시지가 담겨진 객체를 반환합니다.\r\n * message: API 통신 에러메시지\r\n */\r\nexport function registerQna (formData) {\r\n  return axios.post('/api/qna', formData)\r\n      .then(({data: {data}}) => {\r\n        return data;\r\n      })\r\n      .catch(({response: {data: {errorFields, errorMessage}}}) => {\r\n        throw {\r\n          data: errorFields,\r\n          message: errorMessage,\r\n        }\r\n      });\r\n}\r\n\r\n/**\r\n * 문의게시글 목록을 조회합니다.\r\n * @param condition 검색조건\r\n * @returns {Promise<Array>} 문의게시글 목록을 배열로 반환합니다.\r\n */\r\nexport function getQnaList(condition) {\r\n  return axios.get('/api/qna', {\r\n    params: condition\r\n  })\r\n      .then(({data: {data}}) => {\r\n        return data;\r\n      })\r\n      .catch(({response: {data: {errorMessage}}}) => {\r\n        throw {\r\n          message: errorMessage\r\n        }\r\n      });\r\n}\r\n\r\n/**\r\n * 문의게시글 상세정보를 조회합니다.\r\n * @param boardId 문의게시글 번호\r\n * @return {Promise<Object>} 문의게시글 상세정보\r\n */\r\nexport function getQnaDetail(boardId) {\r\n  return axios.get(`/api/qna/${boardId}`)\r\n      .then(({data: {data}}) => {\r\n        return data;\r\n      })\r\n      .catch(({response: {data: {errorMessage}}}) => {\r\n        throw {\r\n          message: errorMessage\r\n        }\r\n      });\r\n}\r\n\r\n/**\r\n * 문의게시글을 업데이트합니다.\r\n * @param boardId 문의게시글 번호\r\n * @param formData 업데이트 폼\r\n * @return {Promise<number>} 해당 문의게시글 번호\r\n */\r\nexport function updateQna(boardId, formData) {\r\n  return axios.put(`/api/qna/${boardId}`, formData)\r\n      .then(() => {\r\n        return boardId;\r\n      })\r\n      .catch(({response: {data: {errorMessage}}}) => {\r\n        throw {\r\n          message: errorMessage\r\n        }\r\n      });\r\n}\r\n\r\n/**\r\n * 문의게시글을 삭제합니다.\r\n * @param boardId 게시글번호\r\n * @return {Promise<void>}\r\n */\r\nexport function deleteQna(boardId) {\r\n  return axios.delete(`/api/qna/${boardId}`)\r\n      .then(() => {\r\n      })\r\n      .catch(({response: {data: {errorMessage}}}) => {\r\n        throw {\r\n          message: errorMessage\r\n        };\r\n      });\r\n}","/**\r\n * 수정폼에서 조회한 게시글의 정보를 폼에 입력합니다.\r\n * @param form 수정 폼\r\n * @param board 게시글 정보\r\n */\r\nexport function initFormValue(form, board) {\r\n  for (const field in form) {\r\n    form[field] = board[field];\r\n  }\r\n}","/**\r\n * 카테고리를 검증합니다.\r\n * 필수입력 입니다.\r\n */\r\nexport function validateCategory(categoryId) {\r\n  if (!categoryId) {\r\n    return '카테고리는 필수입력 입니다.';\r\n  }\r\n  return '';\r\n}\r\n\r\n/**\r\n * 제목을 검증합니다.\r\n * 필수입력, 100글자 미만 이여야 합니다.\r\n */\r\nexport function validateTitle(title) {\r\n  if (!title) {\r\n    return '제목은 필수입력 입니다.';\r\n  } else if (title.length >= 100) {\r\n    return '100글자 미만 이여야 합니다.';\r\n  }\r\n  return '';\r\n}\r\n\r\n/**\r\n * 내용을 검증합니다.\r\n * 필수입력, 4000글자 미만 이여야 합니다\r\n */\r\nexport function validateContent(content) {\r\n  if (!content) {\r\n    return '내용은 필수입력 입니다.';\r\n  } else if (content.length >= 4000) {\r\n    return '4000글자 미만 이여야 합니다.';\r\n  }\r\n}","/**\r\n * 라우트쿼리로부터 검색조건을 설정합니다.\r\n * @param routeQuery 라우트쿼리\r\n * @param defaultLimit 기본 limit 10\r\n * @return {object} 검색조건이 담긴 condition 객체를 반환합니다.\r\n */\r\nexport function createCondition(routeQuery, defaultLimit = 10) {\r\n    const {page, fromDate, toDate, searchCategory, search, limit, orderCondition, order} = routeQuery;\r\n    const condition = {};\r\n    condition.page = page || 1;\r\n    condition.fromDate = fromDate || '';\r\n    condition.toDate = toDate || '';\r\n    condition.search = search || '';\r\n    condition.searchCategory = searchCategory || '';\r\n    condition.limit = limit || defaultLimit;\r\n    condition.orderCondition = orderCondition || '';\r\n    condition.order = order || 'desc';\r\n\r\n    return condition;\r\n}","<template>\r\n\r\n  <textarea\r\n      :value=\"modelValue\"\r\n      @change=\"onChange\">\r\n  </textarea>\r\n\r\n</template>\r\n\r\n<script>\r\n/**\r\n * 베이스 텍스트 컴포넌트\r\n */\r\nexport default {\r\n  name: \"BaseTextarea\",\r\n  props: {\r\n    modelValue: {\r\n      type: String,\r\n      default: '',\r\n      required: false,\r\n      description: '양방향 값'\r\n    },\r\n  },\r\n  methods: {\r\n    onChange(event) {\r\n      this.$emit('update:modelValue', event.target.value);\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\ntextarea {\r\n  outline-color: var(--main-color-blue);\r\n  resize: none;\r\n  border: var(--main-border);\r\n  border-radius: 3px;\r\n  padding: 10px;\r\n  font-size: var(--middle-font-size);\r\n  box-sizing: border-box;\r\n}\r\n\r\n</style>","import { render } from \"./BaseTextarea.vue?vue&type=template&id=6b6df427&scoped=true\"\nimport script from \"./BaseTextarea.vue?vue&type=script&lang=js\"\nexport * from \"./BaseTextarea.vue?vue&type=script&lang=js\"\n\nimport \"./BaseTextarea.vue?vue&type=style&index=0&id=6b6df427&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-6b6df427\"]])\n\nexport default __exports__","<template>\r\n\r\n  <div class=\"form-btn-container\">\r\n    <!-- 등록 폼 -->\r\n    <base-button\r\n        v-if=\"this.formType === 'register'\"\r\n        @click=onRegister\r\n        name=\"등록\"\r\n        class=\"register-btn-save\">\r\n    </base-button>\r\n\r\n    <base-button\r\n        v-if=\"this.formType === 'update'\"\r\n        @click=onUpdate\r\n        name=\"수정\"\r\n        class=\"update-btn-save\">\r\n    </base-button>\r\n\r\n    <base-button\r\n        @click=\"onCancel\"\r\n        name=\"취소\"\r\n        class=\"form-btn-cancel\">\r\n    </base-button>\r\n\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport BaseButton from \"@/components/base/BaseButton.vue\";\r\n\r\nexport default {\r\n  name: \"BoardFormBtnContainer\",\r\n  components: {BaseButton},\r\n  props: {\r\n    formType: {\r\n      type: String,\r\n      required: true,\r\n      description: 'register 또는 update로 폼을 구별합니다.'\r\n    }\r\n  },\r\n  methods: {\r\n    onRegister() {\r\n      if (confirm('등록 하시겠습니까?')) {\r\n        this.$emit('register');\r\n      }\r\n    },\r\n    onUpdate() {\r\n      if (confirm('수정 하시겠습니까?')) {\r\n        this.$emit('update');\r\n      }\r\n    },\r\n    onCancel() {\r\n      if (confirm('취소 하시겠습니까?')) {\r\n        this.$emit('cancel');\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.form-btn-container {\r\n  margin: 30px 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 20px;\r\n}\r\n\r\n.register-btn-save, .update-btn-save, .form-btn-cancel {\r\n  width: 70px;\r\n}\r\n\r\n.form-btn-cancel {\r\n  background-color: var(--sub-color-violet);\r\n}\r\n\r\n</style>","import { render } from \"./BoardFormBtnContainer.vue?vue&type=template&id=1fca8b1e&scoped=true\"\nimport script from \"./BoardFormBtnContainer.vue?vue&type=script&lang=js\"\nexport * from \"./BoardFormBtnContainer.vue?vue&type=script&lang=js\"\n\nimport \"./BoardFormBtnContainer.vue?vue&type=style&index=0&id=1fca8b1e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1fca8b1e\"]])\n\nexport default __exports__","<template>\r\n\r\n  <div class=\"board-form-title-container\">\r\n    <span class=\"board-form-title-name\">{{ name }}</span>\r\n    <span v-if=\"required\" class=\"board-form-title-required-star\">*</span>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\n/**\r\n * 등록, 수정 폼에서 사용되는 각 필드의 타이틀 컴포넌트\r\n */\r\nexport default {\r\n  name: \"BoardFormTitle\",\r\n  props: {\r\n    name: {\r\n      type: String,\r\n      required: true,\r\n      description: '타이틀 이름'\r\n    },\r\n    required: {\r\n      type: Boolean,\r\n      default: true,\r\n      required: false,\r\n      description: '필수 여부'\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.board-form-title-container {\r\n  width: 170px;\r\n  background-color: var(--sub-color-blue);\r\n  font-size: var(--middle-font-size);\r\n  border-right: 1px solid var(--border-color-gray);\r\n  box-sizing: border-box;\r\n  padding: 10px 0 10px 20px;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.board-form-title-required-star {\r\n  color: red;\r\n}\r\n</style>","import { render } from \"./BoardFormTitle.vue?vue&type=template&id=68bea405&scoped=true\"\nimport script from \"./BoardFormTitle.vue?vue&type=script&lang=js\"\nexport * from \"./BoardFormTitle.vue?vue&type=script&lang=js\"\n\nimport \"./BoardFormTitle.vue?vue&type=style&index=0&id=68bea405&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-68bea405\"]])\n\nexport default __exports__","<template>\r\n\r\n  <header>\r\n    <h1>{{ title }}</h1>\r\n  </header>\r\n\r\n</template>\r\n\r\n<script>\r\n/**\r\n * 게시글의 제목 컴포넌트\r\n */\r\nexport default {\r\n  name: \"BoardTitle\",\r\n  props: {\r\n    title: {\r\n      type: String,\r\n      required: true,\r\n      description: '게시글 타이틀',\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\nheader {\r\n  margin: 20px 0;\r\n}\r\n\r\nh1 {\r\n  font-size: var(--title-font-size);\r\n  margin: 0;\r\n}\r\n\r\n</style>","import { render } from \"./BoardTitle.vue?vue&type=template&id=71f638fd&scoped=true\"\nimport script from \"./BoardTitle.vue?vue&type=script&lang=js\"\nexport * from \"./BoardTitle.vue?vue&type=script&lang=js\"\n\nimport \"./BoardTitle.vue?vue&type=style&index=0&id=71f638fd&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-71f638fd\"]])\n\nexport default __exports__","<template>\r\n\r\n  <GNB></GNB>\r\n\r\n  <!-- 타이틀 -->\r\n  <board-title title=\"문의 게시판\"></board-title>\r\n\r\n  <div class=\"update-container\">\r\n\r\n    <!-- 게시글 제목 -->\r\n    <div class=\"update-title-container\">\r\n\r\n      <board-form-title name=\"제목\" class=\"board-form-title-title\"></board-form-title>\r\n\r\n      <div class=\"update-title-input-container\">\r\n        <base-input\r\n            v-model=\"updateForm.boardTitle\"\r\n            @change=\"errorFields.boardTitle = validateTitle(updateForm.boardTitle)\"\r\n            placeholder=\"제목을 입력해 주세요.\"\r\n            class=\"update-title\">\r\n        </base-input>\r\n        <input-error :error-msg=\"errorFields.boardTitle\"></input-error>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <!-- 게시글 내용 -->\r\n    <div class=\"update-content-container\">\r\n      <board-form-title name=\"내용\" class=\"board-form-title-content\">\r\n      </board-form-title>\r\n      <div class=\"update-content-input-container\">\r\n        <base-textarea\r\n            v-model=\"updateForm.boardContent\"\r\n            @change=\"errorFields.boardContent = validateTitle(updateForm.boardContent)\"\r\n            class=\"update-content\">\r\n        </base-textarea>\r\n        <input-error :error-msg=\"errorFields.boardContent\"></input-error>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 비밀글 체크박스 -->\r\n    <div class=\"update-secret-container\">\r\n\r\n      <board-form-title\r\n          :required=\"false\"\r\n          name=\"비밀글\"\r\n          class=\"board-form-title-secret\">\r\n      </board-form-title>\r\n\r\n      <div class=\"update-secret-input-container\">\r\n        <base-input\r\n            v-model=\"updateForm.qnaSecret\"\r\n            type=\"checkbox\"\r\n            class=\"update-secret-input\">\r\n        </base-input>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <!-- 수정 폼 버튼 -->\r\n    <board-form-btn-container\r\n        @update=\"onUpdate\"\r\n        @cancel=\"router.push({path: '/qna', query: condition});\"\r\n        form-type=\"update\">\r\n    </board-form-btn-container>\r\n\r\n  </div>\r\n</template>\r\n<script setup>\r\n/**\r\n * 문의게시글 수정 컴포넌트\r\n */\r\n\r\nimport BoardTitle from \"@/components/board/BoardTitle.vue\";\r\nimport BoardFormTitle from \"@/components/board/BoardFormTitle.vue\";\r\nimport {ref} from \"vue\";\r\nimport InputError from \"@/components/base/BaseInputError.vue\";\r\nimport BaseInput from \"@/components/base/BaseInput.vue\";\r\nimport {validateContent, validateTitle} from \"@/util/boardValidUtil\";\r\nimport BaseTextarea from \"@/components/base/BaseTextarea.vue\";\r\nimport {useRoute, useRouter} from \"vue-router\";\r\nimport {useStore} from \"vuex\";\r\nimport {getQnaDetail, updateQna} from \"@/api/board/qnaService\";\r\nimport {isCurrentUserId} from \"@/util/authUtil\";\r\nimport GNB from \"@/components/GNB.vue\";\r\nimport BoardFormBtnContainer from \"@/components/board/BoardFormBtnContainer.vue\";\r\nimport {initFormValue} from \"@/util/boardUtil\";\r\nimport {createCondition} from \"@/util/queryParamUtil\";\r\n\r\nconst store = useStore();\r\nconst route = useRoute();\r\nconst router = useRouter();\r\n\r\n/* 문의게시글 수정 정보 */\r\nconst updateForm = ref({\r\n  boardTitle: '', /* 게시글 제목 */\r\n  boardContent: '', /* 게시글 내용 */\r\n  qnaSecret: true, /* 비밀글 여부 */\r\n})\r\n/* 유효성검증 에러메시지 */\r\nconst errorFields = ref({\r\n  boardTitle: '', /* 게시글 제목*/\r\n  boardContent: '', /* 게시글 내용*/\r\n})\r\n\r\nconst qna = ref({}); // 해당게시글\r\nconst condition = ref({}); // 검색조건\r\n\r\ninitQnaUpdate();\r\n\r\n/**\r\n * 문의게시글 수정컴포넌트를 초기화합니다.\r\n * @returns {Promise<void>}\r\n */\r\nasync function initQnaUpdate() {\r\n  condition.value = createCondition(route.query);\r\n  condition.value.myQna = route.query.myQna || false;\r\n\r\n  try {\r\n    const boardId = route.params.boardId;\r\n    const [qnaResult] =await Promise.all([\r\n      getQnaDetail(boardId),\r\n    ])\r\n\r\n    qna.value = qnaResult;\r\n\r\n    initFormValue(updateForm.value, qna.value)\r\n  } catch ({message}) {\r\n    console.error(message);\r\n  }\r\n}\r\n\r\n/**\r\n * 문의게시글을 수정합니다.\r\n */\r\nasync function onUpdate() {\r\n  if (!validateUpdateForm() && !isCurrentUserId(qna.value.userId)) {\r\n    return false;\r\n  }\r\n\r\n  try {\r\n    const formData = createFormData();\r\n\r\n    const qnaId = await updateQna(route.params.boardId, formData);\r\n\r\n    router.push({path: `/qna/${qnaId}`, query: condition.value});\r\n\r\n  } catch ({data, message}) {\r\n    // 유효성검증에 실패한 필드의 에러메시지를 저장합니다.\r\n    for (const field in data) {\r\n      errorFields.value[field] = data[field];\r\n    }\r\n    console.error(message);\r\n  }\r\n}\r\n\r\n/**\r\n * FormData를 생성합니다\r\n * @returns FormData 게시글form정보\r\n */\r\nfunction createFormData() {\r\n  const formData = new FormData();\r\n\r\n  for (const field in updateForm.value) {\r\n    formData.append(field, updateForm.value[field]);\r\n  }\r\n\r\n  return formData;\r\n}\r\n\r\n/**\r\n * 수정폼을 검증합니다.\r\n * @returns {boolean}\r\n */\r\nfunction validateUpdateForm() {\r\n  errorFields.value.boardTitle = validateTitle(updateForm.value.boardTitle);\r\n  errorFields.value.boardContent = validateContent(updateForm.value.boardContent);\r\n\r\n  for (const errorMsg of Object.values(errorFields.value)) {\r\n    if (errorMsg) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n</script>\r\n\r\n\r\n<script>\r\nexport default {\r\n  name: \"QnaUpdate\"\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.update-title-container, .update-content-container,\r\n.update-secret-container {\r\n  border-bottom: 1px solid var(--border-color-gray);\r\n  height: 100%;\r\n  display: flex;\r\n}\r\n\r\n .update-title-input-container, .update-content-input-container,\r\n .update-secret-input-container {\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  margin: 5px 0 5px 10px;\r\n}\r\n\r\n.update-title {\r\n  width: 95%;\r\n  height: 40px;\r\n}\r\n\r\n.update-content {\r\n  width: 95%;\r\n  min-height: 200px;\r\n}\r\n\r\n.update-secret-input {\r\n  width: 20px;\r\n}\r\n\r\n</style>","import script from \"./QnaUpdate.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./QnaUpdate.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./QnaUpdate.vue?vue&type=style&index=0&id=25ec83e9&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-25ec83e9\"]])\n\nexport default __exports__"],"names":["registerQna","formData","axios","post","then","data","catch","response","errorFields","errorMessage","message","getQnaList","condition","get","params","getQnaDetail","boardId","updateQna","put","deleteQna","delete","initFormValue","form","board","field","validateCategory","categoryId","validateTitle","title","length","validateContent","content","createCondition","routeQuery","defaultLimit","page","fromDate","toDate","searchCategory","search","limit","orderCondition","order","_createElementBlock","value","$props","modelValue","onChange","_cache","args","$options","_hoisted_1","name","props","type","String","default","required","description","methods","event","this","$emit","target","__exports__","render","class","formType","_createBlock","_component_base_button","onClick","onRegister","onUpdate","_createVNode","onCancel","components","BaseButton","confirm","_createElementVNode","_hoisted_2","_toDisplayString","_hoisted_3","Boolean","__default__","useStore","route","useRoute","router","useRouter","updateForm","ref","boardTitle","boardContent","qnaSecret","qna","async","initQnaUpdate","query","myQna","qnaResult","Promise","all","console","error","validateUpdateForm","isCurrentUserId","userId","createFormData","qnaId","push","path","FormData","append","errorMsg","Object","values"],"sourceRoot":""}